name: Docker

on:
  push:
    # Publish `$default-branch` as Docker `latest` image.
    branches:
      - $default-branch

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
      - stable
      - devel
  workflow_dispatch:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: ethsbell-rewrite

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - id: cache-docker
        uses: actions/cache@v4
        with:
          path: /tmp/docker-save
          key: docker-save-${{ hashFiles('Dockerfile') }}
      - run: docker load -i /tmp/docker-save/snapshot.tar || true
        if: steps.cache-docker.outputs.cache-hit == 'true'
      - run: docker build . -t ethsbell-rewrite --cache-from=ethsbell-rewrite-cache
      - run: docker tag ethsbell-rewrite ethsbell-rewrite-cache && mkdir -p /tmp/docker-save && docker save ethsbell-rewrite-cache -o /tmp/docker-save/snapshot.tar && ls -lh /tmp/docker-save || true
        if: always() && steps.cache-docker.outputs.cache-hit != 'true'
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --build-arg GITHUB_SHA --build-arg GITHUB_REPOSITORY

      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "$default-branch" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:latest
